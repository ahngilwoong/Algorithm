/*

시간 제한	메모리 제한	제출	정답	맞힌 사람	정답 비율
2 초	256 MB	109130	45403	33935	40.235%
문제
알파벳 소문자로 이루어진 N개의 단어가 들어오면 아래와 같은 조건에 따라 정렬하는 프로그램을 작성하시오.

길이가 짧은 것부터
길이가 같으면 사전 순으로
입력
첫째 줄에 단어의 개수 N이 주어진다. (1 ≤ N ≤ 20,000) 둘째 줄부터 N개의 줄에 걸쳐 알파벳 소문자로 이루어진 단어가 한 줄에 하나씩 주어진다. 주어지는 문자열의 길이는 50을 넘지 않는다.

출력
조건에 따라 정렬하여 단어들을 출력한다. 단, 같은 단어가 여러 번 입력된 경우에는 한 번씩만 출력한다.

예제 입력 1 
13
but
i
wont
hesitate
no
more
no
more
it
cannot
wait
im
yours
예제 출력 1 
i
im
it
no
but
more
wait
wont
yours
cannot
hesitate

*/




package test_package;


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {
    public static void main(String[] args) throws IOException {

        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        Map<String,Boolean> distinctCheckMap = new HashMap<>();
        int size = Integer.parseInt(bufferedReader.readLine());
        List<String> list = new ArrayList<>();

        for (int i = 0; i < size; i++) {
            String word = bufferedReader.readLine();
            if(!Objects.isNull(distinctCheckMap.get(word))){
                continue;
            }
            distinctCheckMap.put(word,true);
            list.add(word);
        }
        System.out.println(sortWord(list));
    }

    public static String sortWord(List<String> list){
        StringBuilder answer = new StringBuilder();
        Collections.sort(list, new Comparator<String>() {
            @Override
            public int compare(String o1, String o2) {
                int o1Size = o1.length();
                int o2Size = o2.length();

                if(o1Size<o2Size){
                    return -1;
                }else if(o1Size>o2Size){
                    return 1;
                }else{
                    for (int i = 0; i < o1Size; i++) {
                        char tempO1 = o1.charAt(i);
                        char tempO2 = o2.charAt(i);
                        if(tempO1 < tempO2){
                            return -1;
                        }else if(tempO1 > tempO2){
                            return 1;
                        }
                    }
                    return 0;
                }

            }
        });


        for (String x : list){
            answer.append(x).append("\n");
        }
        return answer.toString().trim();
    }

}
